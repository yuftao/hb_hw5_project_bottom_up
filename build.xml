<project name="HelloWorld" default="compile" basedir=".">
    
    <!-- Name of project and version -->
    <property name="proj.name" value="HelloWorld" />
    <property name="proj.version" value="1.0" />
    
    <!-- Global properties for this build -->
    <property name="src.java.dir" value="src" />
    <property name="src.etc.dir" value="etc" />
    <property name="src.confs.dir" value="confs" />
    <property name="lib.dir" value="lib" />
    <property name="build.dir" value="bin" />

    <!-- Defined by myself : a folder which contains the *.hbm.xml files -->
    
    <!-- Classpath declaration -->
    <path id="project.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
            <include name="**/*.zip" />
        </fileset>
        
        <!-- Added by myself to include the configuration files into the classpath -->
        <pathelement path="${src.confs.dir}"/>
    </path>
    
    <!-- Useful shortcuts -->
    <patternset id="meta.files">
        <include name="**/*.xml" />
        <include name="**/*.properties" />
    </patternset>
    
    <!-- Clean up -->
    <target name="clean">
        <delete dir="${build.dir}" />
        <mkdir dir="${build.dir}" />
    </target>
    
    <!-- Compile Java source -->
    <target name="compile" depends="clean">
        <mkdir dir="${build.dir}" />
        <javac
            srcdir="${src.java.dir}" 
            destdir="${build.dir}" 
            nowarn="on">
            <classpath refid="project.classpath" />
        </javac>
    </target>
    
    <!-- Copy metadata to build classpath -->
    <target name="copymetafiles">
        <copy todir="${build.dir}">
            <fileset dir="${src.java.dir}">
                <patternset refid="meta.files" />
            </fileset>
        </copy>
        
        <!-- Copy configuration files from etc/ -->
        <copy todir="${build.dir}">
            <fileset dir="${src.etc.dir}">
                <patternset refid="meta.files" />
            </fileset>
        </copy>
    </target>
    
    <!-- Run HelloWorld -->
    <target name="run" depends="compile, copymetafiles" 
        description="Build and run HelloWorld">
        <java fork="true" 
            classname="hello.HelloWorld" 
            classpathref="project.classpath">
            <classpath path="${build.dir}" />
        </java>
    </target>
    
    <taskdef name="hibernatetool" 
        classname="org.hibernate.tool.ant.HibernateToolTask" 
        classpathref="project.classpath" />
    
    <target name="schemaexport" depends="compile, copymetafiles" 
        description="Exports a generated schema to DB and file">
        
        <hibernatetool destdir="${basedir}">
            <classpath path="${build.dir}" />
            
            <annotationconfiguration 
                configurationfile="${build.dir}/hibernate.cfg.xml" />
            
            <hbm2ddl 
                drop="true" 
                create="true" 
                export="true" 
                outputfilename="helloworld-ddl.sql" 
                delimiter=";" 
                format="true" />
            
        </hibernatetool>
    </target>
    
    <target name="dbmanager" description="Start HSQLDB manager">
        <java 
            classname="org.hsqldb.util.DatabaseManagerSwing" 
            fork="yes" 
            classpathref="project.classpath" 
            failonerror="true">
            <arg value="-url" />
            <arg value="jdbc:hsqldb:hsql://localhost/" />
            <arg value="-driver" />
            <arg value="org.hsqldb.jdbcDriver" />
        </java>
    </target>
    
    <taskdef name="hibernatetool" 
    	classname="org.hibernate.tool.ant.HibernateToolTask" 
    	classpathref="project.classpath" />

	<target name="reveng.hbmxml" 
	    description="Produces XML mapping files in src directory">
	    
	    <hibernatetool destdir="${basedir}/src">
	        
	        <jdbcconfiguration 
	            propertyfile="${basedir}/helloworld.db.properties" 
	            revengfile="${basedir}/helloworld.reveng.xml" />
	        
	        <hbm2hbmxml /><!-- Export Hibernate XML files -->
	        <hbm2cfgxml /><!-- Export a hibernate.cfg.xml file -->
	        
	    </hibernatetool>
	    
	</target>
	
	<!-- This target was from the book originaly but doesn't work with an error -->
	<target name="reveng.pojos_example" description="Produces Java classes from XML mappings">
	    
	    <hibernatetool destdir="${basedir}/src">
	        
	        <configuration 
	            configurationfile="${basedir}/src/hibernate.cfg.xml">
	            <fileset dir="${basedir}/src">
	                <include name="**/*.hbm.xml"/>
	            </fileset>
	            
	        </configuration>
	        
	        <hbm2java/><!-- Generate entity class source -->
	        
	    </hibernatetool>
	</target>
	
	<!-- This target is working which is modified from the target : reveng.pojos_example -->
	<target name="reveng.pojos_worksforme" description="Produces Java classes from XML mappings">
	    
	    <hibernatetool destdir="${basedir}/src">
	        
			<jdbcconfiguration 
	            propertyfile="${basedir}/helloworld.db.properties" 
	            revengfile="${basedir}/helloworld.reveng.xml"/>
	        
	        <!-- <configuration>
	            <fileset dir="${basedir}/src">
	                <include name="**/*.hbm.xml" />
	            </fileset>
	            
	        </configuration> -->
	        
	        <hbm2java/><!-- Generate entity class source -->
	        
	    </hibernatetool>
	</target>
	
	<target name="reveng.entities" 
	    description="Produce Java entity classes in src directory">
	    
	    <hibernatetool destdir="${basedir}/src">
	        
	        <jdbcconfiguration 
	            propertyfile="${basedir}/helloworld.db.properties" 
	            revengfile="${basedir}/helloworld.reveng.xml"/>
	            
	        <hbm2java ejb3="true"/>
	        <hbm2cfgxml ejb3="true"/>
	        
	    </hibernatetool>
	</target>
</project>